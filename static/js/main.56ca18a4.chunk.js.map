{"version":3,"sources":["photo.svg","magnifying-glass.svg","loading-indicator.svg","clear.svg","utils/queries.js","components/SearchBar.js","components/Artists.js","components/Articles.js","components/Artworks.js","components/Cities.js","components/Collections.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","GET_ARTIST_RESULTS","gql","_templateObject","SearchBar","_ref","loading","searchTerm","_useState","useState","_useState2","Object","slicedToArray","term","setTerm","onSearchSubmit","e","preventDefault","length","react_default","a","createElement","onSubmit","className","src","searchIcon","alt","onClick","loadingIcon","cancelIcon","value","onChange","_ref2","target","type","placeholder","Artists","artists","map","artist","react","key","node","href","displayLabel","imageUrl","fallbackImage","Articles","articles","article","Artworks","artworks","artwork","Cities","cities","city","Collections","collections","col","categories","id","name","App","client","setSearchTerm","_useState3","_useState4","categoryIdx","setCategoryIdx","_useLazyQuery","useLazyQuery","_useLazyQuery2","getSearchResult","_useLazyQuery2$","data","onSearch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","variables","query","entity","stop","_x","apply","this","arguments","components_SearchBar","li","index","_","search","Fragment","components_Artists","edges","components_Artworks","components_Articles","components_Cities","components_Collections","ApolloClient","uri","ReactDOM","render","react_common_esm","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.56ca18a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.29a98b0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.a8b3079e.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading-indicator.6eca94c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.2c97f487.svg\";","import { gql } from \"apollo-boost\";\n\nexport const GET_ARTIST_RESULTS = gql`\n  query getSearchResults($query: String!, $entity: [SearchEntity]) {\n    search(query: $query, first: 5, entities: $entity) {\n      edges {\n        node {\n          displayLabel\n          href\n          imageUrl\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/searchbar.css\";\nimport searchIcon from \"../magnifying-glass.svg\";\nimport loadingIcon from \"../loading-indicator.svg\";\nimport cancelIcon from \"../clear.svg\";\n\nfunction SearchBar({ loading, searchTerm }) {\n  const [term, setTerm] = useState(\"\");\n\n  // controlled input\n  const onInputChange = ({ target: { value } }) => {\n    setTerm(value);\n  };\n\n  // fire query with the term submitted\n  const onSearchSubmit = e => {\n    e.preventDefault();\n    if (term.length > 0) {\n      searchTerm(term);\n    }\n  };\n\n  // clear the term\n  const onClearTerm = () => {\n    setTerm(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSearchSubmit} className=\"ui form\">\n        <img\n          className={term.length > 0 ? \"search with-text\" : \"search\"}\n          src={searchIcon}\n          alt=\"search-icon\"\n          onClick={onSearchSubmit}\n        />\n        {loading ? (\n          <img className=\"loading\" src={loadingIcon} alt=\"loading-icon\" />\n        ) : term ? (\n          <img\n            className=\"cancel\"\n            src={cancelIcon}\n            alt=\"cancel-icon\"\n            onClick={onClearTerm}\n          />\n        ) : null}\n        <input\n          className={term.length > 0 ? \"input-with-text\" : \"input-no-text\"}\n          value={term}\n          onChange={onInputChange}\n          type=\"text\"\n          placeholder=\"Search by artist, gallery, style, theme, tag etc.\"\n        />\n      </form>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  loading: PropTypes.bool,\n  searchTerm: PropTypes.func\n};\n\nexport default SearchBar;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/artists.css\";\nimport fallbackImage from \"../photo.svg\";\n\n/**\n * Display artists category\n * @param {artists} artists\n */\nfunction Artists({ artists }) {\n  return (\n    <div className=\"container\">\n      {artists.length > 0 ? (\n        artists.map(artist => (\n          <Fragment key={artist.node.href}>\n            <main>\n              <p>{artist.node.displayLabel}</p>\n              <h6>Artist</h6>\n            </main>\n            <img\n              className={\n                artist.node.imageUrl.length > 0 ? \"avatar\" : \"avatar no-image\"\n              }\n              src={\n                artist.node.imageUrl.length > 0\n                  ? artist.node.imageUrl\n                  : fallbackImage\n              }\n              alt=\"artist_image\"\n            />\n          </Fragment>\n        ))\n      ) : (\n        <h4>No result found</h4>\n      )}\n    </div>\n  );\n}\n\nArtists.propTypes = {\n  artists: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        displayLabel: PropTypes.string,\n        href: PropTypes.string,\n        imageUrl: PropTypes.string\n      })\n    })\n  )\n};\n\nexport default Artists;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/articles.css\";\nimport fallbackImage from \"../photo.svg\";\n\n/**\n * Display articles category\n * @param {articles} props\n */\nfunction Articles({ articles }) {\n  return (\n    <div className=\"container\">\n      {articles.length > 0 ? (\n        articles.map(article => (\n          <Fragment key={article.node.href}>\n            <main>\n              <p>{article.node.displayLabel}</p>\n              <h6>Article</h6>\n            </main>\n            <img\n              className={\n                article.node.imageUrl.length > 0 ? \"avatar\" : \"avatar no-image\"\n              }\n              src={\n                article.node.imageUrl.length > 0\n                  ? article.node.imageUrl\n                  : fallbackImage\n              }\n              alt=\"article_image\"\n            />\n          </Fragment>\n        ))\n      ) : (\n        <h4>No result found</h4>\n      )}\n    </div>\n  );\n}\n\nArticles.propTypes = {\n  articles: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        displayLabel: PropTypes.string,\n        href: PropTypes.string,\n        imageUrl: PropTypes.string\n      })\n    })\n  )\n};\n\nexport default Articles;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/artworks.css\";\nimport fallbackImage from \"../photo.svg\";\n\n/**\n * Display artworks category\n * @param {artworks} artworks\n */\nfunction Artworks({ artworks }) {\n  return (\n    <div className=\"container\">\n      {artworks.length > 0 ? (\n        artworks.map(artwork => (\n          <Fragment key={artwork.node.href}>\n            <main>\n              <p>{artwork.node.displayLabel}</p>\n              <h6>Artwork</h6>\n            </main>\n            <img\n              className={\n                artwork.node.imageUrl.length > 0 ? \"avatar\" : \"avatar no-image\"\n              }\n              src={\n                artwork.node.imageUrl.length > 0\n                  ? artwork.node.imageUrl\n                  : fallbackImage\n              }\n              alt=\"artwork_image\"\n            />\n          </Fragment>\n        ))\n      ) : (\n        <h4>No result found</h4>\n      )}\n    </div>\n  );\n}\n\nArtworks.propTypes = {\n  artworks: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        displayLabel: PropTypes.string,\n        href: PropTypes.string,\n        imageUrl: PropTypes.string\n      })\n    })\n  )\n};\n\nexport default Artworks;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/cities.css\";\nimport fallbackImage from \"../photo.svg\";\n\n/**\n * Display cities category\n * @param {cities} cities\n */\nfunction Cities({ cities }) {\n  return (\n    <div className=\"container\">\n      {cities.length > 0 ? (\n        cities.map(city => (\n          <Fragment key={city.node.href}>\n            <main>\n              <p>{city.node.displayLabel}</p>\n              <h6>City</h6>\n            </main>\n            <img\n              className={\n                city.node.imageUrl.length > 0 ? \"avatar\" : \"avatar no-image\"\n              }\n              src={\n                city.node.imageUrl.length > 0\n                  ? city.node.imageUrl\n                  : fallbackImage\n              }\n              alt=\"city_image\"\n            />\n          </Fragment>\n        ))\n      ) : (\n        <h4>No result found</h4>\n      )}\n    </div>\n  );\n}\n\nCities.propTypes = {\n  cities: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        displayLabel: PropTypes.string,\n        href: PropTypes.string,\n        imageUrl: PropTypes.string\n      })\n    })\n  )\n};\n\nexport default Cities;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/collections.css\";\nimport fallbackImage from \"../photo.svg\";\n\n/**\n * Display collections category\n * @param {collections} collections\n */\nfunction Collections({ collections }) {\n  return (\n    <div className=\"container\">\n      {collections.length > 0 ? (\n        collections.map(col => (\n          <Fragment key={col.node.href}>\n            <main>\n              <p>{col.node.displayLabel}</p>\n              <h6>Collection</h6>\n            </main>\n            <img\n              className={\n                col.node.imageUrl.length > 0 ? \"avatar\" : \"avatar no-image\"\n              }\n              src={\n                col.node.imageUrl.length > 0 ? col.node.imageUrl : fallbackImage\n              }\n              alt=\"collection_image\"\n            />\n          </Fragment>\n        ))\n      ) : (\n        <h4>No result found </h4>\n      )}\n    </div>\n  );\n}\n\nCollections.propTypes = {\n  collections: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        displayLabel: PropTypes.string,\n        href: PropTypes.string,\n        imageUrl: PropTypes.string\n      })\n    })\n  )\n};\n\nexport default Collections;\n","import React, { useState } from \"react\";\r\nimport { GET_ARTIST_RESULTS } from \"../utils/queries\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport Artists from \"./Artists\";\r\nimport Articles from \"./Articles\";\r\nimport Artworks from \"./Artworks\";\r\nimport Cities from \"./Cities\";\r\nimport Collections from \"./Collections\";\r\n\r\nconst categories = [\r\n  { id: 0, name: \"Artists\" },\r\n  { id: 1, name: \"Artworks\" },\r\n  { id: 2, name: \"Articles\" },\r\n  { id: 3, name: \"Cities\" },\r\n  { id: 4, name: \"Collections\" }\r\n];\r\n\r\nconst App = ({ client }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [categoryIdx, setCategoryIdx] = useState(0);\r\n  // apollo hooks for lazily fire queries\r\n  const [getSearchResult, { loading, data }] = useLazyQuery(GET_ARTIST_RESULTS);\r\n\r\n  const onSearch = async term => {\r\n    //fire initial api request\r\n    setSearchTerm(term);\r\n    getSearchResult({ variables: { query: term, entity: [\"ARTIST\"] } });\r\n    // select artists category\r\n    setCategoryIdx(0);\r\n  };\r\n\r\n  const onCategorySelected = id => {\r\n    // Consecutive requests based on specific entity\r\n    // For the purpose of lazy loading, it's better to load them on demand\r\n    // because the result set can be long in reality (even though we're limiting it manually to 5)\r\n    // for consecutive selections on the same category will be retrieved from cache\r\n    // thanks to Apollo and prevent multiple requests\r\n    if (id === 0) {\r\n      getSearchResult({ variables: { query: searchTerm, entity: [\"ARTIST\"] } });\r\n    } else if (id === 1) {\r\n      getSearchResult({\r\n        variables: { query: searchTerm, entity: [\"ARTWORK\"] }\r\n      });\r\n    } else if (id === 2) {\r\n      getSearchResult({\r\n        variables: { query: searchTerm, entity: [\"ARTICLE\"] }\r\n      });\r\n    } else if (id === 3) {\r\n      getSearchResult({ variables: { query: searchTerm, entity: [\"CITY\"] } });\r\n    } else if (id === 4) {\r\n      getSearchResult({\r\n        variables: { query: searchTerm, entity: [\"COLLECTION\"] }\r\n      });\r\n    }\r\n    // set selected category idx\r\n    setCategoryIdx(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"resultContainer\">\r\n      <SearchBar searchTerm={onSearch} loading={loading} />\r\n      {(searchTerm || loading) && (\r\n        <div className=\"resultList\">\r\n          <ul>\r\n            {categories.map((li, index) => (\r\n              <li\r\n                className={categoryIdx === index ? \"selected\" : null}\r\n                onClick={_ => onCategorySelected(li.id)}\r\n                key={li.id}\r\n              >\r\n                {li.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {data && data.search && (\r\n        <>\r\n          <div className=\"resultList\">\r\n            {categoryIdx === 0 && <Artists artists={data.search.edges} />}\r\n            {categoryIdx === 1 && <Artworks artworks={data.search.edges} />}\r\n            {categoryIdx === 2 && <Articles articles={data.search.edges} />}\r\n            {categoryIdx === 3 && <Cities cities={data.search.edges} />}\r\n            {categoryIdx === 4 && (\r\n              <Collections collections={data.search.edges} />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"./index.css\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://metaphysics-production.artsy.net\"\r\n});\r\n\r\nconst ApolloApp = () => (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n\r\nReactDOM.render(<ApolloApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}